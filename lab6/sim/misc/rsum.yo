                            | # Zhang Yuechen 520021910266
0x000:                      | 	.pos 0x0
0x000: 30f40004000000000000 | 	irmovq stack, %rsp
0x00a: 804800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 	
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq ele1, %rdi
0x052: 805c00000000000000   | 	call rsum_list
0x05b: 90                   | 	ret
                            | 
0x05c:                      | rsum_list:
0x05c: 30f80000000000000000 | 	irmovq $0, %r8
0x066: 6187                 | 	subq %r8, %rdi		# if (!ls) return 0
0x068: 739500000000000000   | 	je L1
0x071: 50970000000000000000 | 	mrmovq (%rdi), %r9	# val = ls->val
0x07b: 50770800000000000000 | 	mrmovq 8(%rdi),%rdi	# ls->next
0x085: a09f                 | 	pushq %r9
0x087: 805c00000000000000   | 	call rsum_list		# rsum_list(ls->next)
0x090: b09f                 | 	popq %r9
0x092: 6090                 | 	addq %r9, %rax
0x094: 90                   | 	ret			# return val + rest
0x095:                      | L1:
0x095: 30f00000000000000000 | 	irmovq $0, %rax
0x09f: 90                   | 	ret
                            | 
0x400:                      | 	.pos 0x400
0x400:                      | stack:
                            | 
                            | 
                            | 	
                            | 	
