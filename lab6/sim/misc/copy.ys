# Zhang Yuechen 520021910266
	.pos 0x0
	irmovq stack, %rsp
	call main
	halt

.align 8
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block		# copy(*src, *dest, len)
	ret

copy_block:
	irmovq $0, %rax 	# result = 0
	irmovq $0, %r8
	irmovq $8, %r10
	irmovq $1, %r11
Loop:
	subq %r8, %rdx		# if (len <=  0) return result
	jle L1
	mrmovq (%rdi), %r9	# val = *src
	rmmovq %r9, (%rsi)	# *dest = val
	xorq %r9, %rax		# result ^= val
	addq %r10, %rdi		# src++
	addq %r10, %rsi		# dest++	
	subq %r11, %rdx		# len--
	jmp Loop
L1:
	ret

	.pos 0x400
stack:

	
